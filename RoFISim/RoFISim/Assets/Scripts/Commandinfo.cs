// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: commandinfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Rofi {

  /// <summary>Holder for reflection information generated from commandinfo.proto</summary>
  public static partial class CommandinfoReflection {

    #region Descriptor
    /// <summary>File descriptor for commandinfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommandinfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFjb21tYW5kaW5mby5wcm90bxIEcm9maSI9CgpQYXJhbWV0ZXJzEg8KB2pv",
            "aW50SWQYASABKAUSDgoGZG9ja0lkGAIgASgFEg4KBmZsb2F0MRgFIAEoAiJM",
            "CgdDb21tYW5kEh8KBHR5cGUYASABKA4yES5yb2ZpLkNvbW1hbmRUeXBlEiAK",
            "BnBhcmFtcxgCIAEoCzIQLnJvZmkuUGFyYW1ldGVycyrwBAoLQ29tbWFuZFR5",
            "cGUSDgoKTk9fQ09NTUFORBAAEg0KCUpPSU5UX01BWBABEg0KCUpPSU5UX01J",
            "ThACEhMKD0pPSU5UX01BWF9TUEVFRBADEhQKEEpPSU5UX01BWF9UT1JRVUUQ",
            "BBIWChJKT0lOVF9HRVRfUE9TSVRJT04QBRITCg9KT0lOVF9HRVRfU1BFRUQQ",
            "BhIUChBKT0lOVF9TRVRfVE9SUVVFEAcSEwoPSk9JTlRfU0VUX1NQRUVEEAgS",
            "FgoSSk9JTlRfU0VUX1BPU0lUSU9OEAkSFQoRSk9JTlRfT05fUE9TSVRJT04Q",
            "ChIaChZKT0lOVF9QT1NJVElPTl9SRUFDSEVEEAsSDgoKRE9DS19TVEFURRAM",
            "EhAKDERPQ0tfQ09OTkVDVBANEhwKGERPQ0tfV0FJVF9GT1JfQ09OTkVDVElP",
            "ThAOEh8KG0RPQ0tfV0FJVF9GT1JfRElTQ09OTkVDVElPThAPEhYKEkRPQ0tf",
            "T05fQ09OTkVDVElPThAQEhkKFURPQ0tfT05fRElTQ09OTkVDVElPThAREh8K",
            "G0RPQ0tfR0VUX01VVFVBTF9PUklFTlRBVElPThASEhMKD0RPQ0tfRElTQ09O",
            "TkVDVBATEhUKEURPQ0tfTElORV9DT05ORUNUEBQSGAoURE9DS19MSU5FX0RJ",
            "U0NPTk5FQ1QQFRIVChFET0NLX0xJTkVfQ1VSUkVOVBAWEhUKEURPQ0tfTElO",
            "RV9WT0xUQUdFEBcSEQoNTU9EVUxFX0dFVF9JRBAYEhMKD01PRFVMRV9HRVRf",
            "VFlQRRAZEhQKEE1PRFVMRV9HRVRfU0hBUEUQGmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Rofi.CommandType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Rofi.Parameters), global::Rofi.Parameters.Parser, new[]{ "JointId", "DockId", "Float1" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rofi.Command), global::Rofi.Command.Parser, new[]{ "Type", "Params" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CommandType {
    [pbr::OriginalName("NO_COMMAND")] NoCommand = 0,
    [pbr::OriginalName("JOINT_MAX")] JointMax = 1,
    [pbr::OriginalName("JOINT_MIN")] JointMin = 2,
    [pbr::OriginalName("JOINT_MAX_SPEED")] JointMaxSpeed = 3,
    [pbr::OriginalName("JOINT_MAX_TORQUE")] JointMaxTorque = 4,
    [pbr::OriginalName("JOINT_GET_POSITION")] JointGetPosition = 5,
    [pbr::OriginalName("JOINT_GET_SPEED")] JointGetSpeed = 6,
    [pbr::OriginalName("JOINT_SET_TORQUE")] JointSetTorque = 7,
    [pbr::OriginalName("JOINT_SET_SPEED")] JointSetSpeed = 8,
    [pbr::OriginalName("JOINT_SET_POSITION")] JointSetPosition = 9,
    [pbr::OriginalName("JOINT_ON_POSITION")] JointOnPosition = 10,
    [pbr::OriginalName("JOINT_POSITION_REACHED")] JointPositionReached = 11,
    [pbr::OriginalName("DOCK_STATE")] DockState = 12,
    [pbr::OriginalName("DOCK_CONNECT")] DockConnect = 13,
    [pbr::OriginalName("DOCK_WAIT_FOR_CONNECTION")] DockWaitForConnection = 14,
    [pbr::OriginalName("DOCK_WAIT_FOR_DISCONNECTION")] DockWaitForDisconnection = 15,
    [pbr::OriginalName("DOCK_ON_CONNECTION")] DockOnConnection = 16,
    [pbr::OriginalName("DOCK_ON_DISCONNECTION")] DockOnDisconnection = 17,
    [pbr::OriginalName("DOCK_GET_MUTUAL_ORIENTATION")] DockGetMutualOrientation = 18,
    [pbr::OriginalName("DOCK_DISCONNECT")] DockDisconnect = 19,
    [pbr::OriginalName("DOCK_LINE_CONNECT")] DockLineConnect = 20,
    [pbr::OriginalName("DOCK_LINE_DISCONNECT")] DockLineDisconnect = 21,
    [pbr::OriginalName("DOCK_LINE_CURRENT")] DockLineCurrent = 22,
    [pbr::OriginalName("DOCK_LINE_VOLTAGE")] DockLineVoltage = 23,
    [pbr::OriginalName("MODULE_GET_ID")] ModuleGetId = 24,
    [pbr::OriginalName("MODULE_GET_TYPE")] ModuleGetType = 25,
    [pbr::OriginalName("MODULE_GET_SHAPE")] ModuleGetShape = 26,
  }

  #endregion

  #region Messages
  /// <summary>
  /// All possible parameters (default values are not serialized)
  /// </summary>
  public sealed partial class Parameters : pb::IMessage<Parameters> {
    private static readonly pb::MessageParser<Parameters> _parser = new pb::MessageParser<Parameters>(() => new Parameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Parameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rofi.CommandinfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Parameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Parameters(Parameters other) : this() {
      jointId_ = other.jointId_;
      dockId_ = other.dockId_;
      float1_ = other.float1_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Parameters Clone() {
      return new Parameters(this);
    }

    /// <summary>Field number for the "jointId" field.</summary>
    public const int JointIdFieldNumber = 1;
    private int jointId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int JointId {
      get { return jointId_; }
      set {
        jointId_ = value;
      }
    }

    /// <summary>Field number for the "dockId" field.</summary>
    public const int DockIdFieldNumber = 2;
    private int dockId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DockId {
      get { return dockId_; }
      set {
        dockId_ = value;
      }
    }

    /// <summary>Field number for the "float1" field.</summary>
    public const int Float1FieldNumber = 5;
    private float float1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Float1 {
      get { return float1_; }
      set {
        float1_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Parameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Parameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JointId != other.JointId) return false;
      if (DockId != other.DockId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Float1, other.Float1)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JointId != 0) hash ^= JointId.GetHashCode();
      if (DockId != 0) hash ^= DockId.GetHashCode();
      if (Float1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Float1);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (JointId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(JointId);
      }
      if (DockId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DockId);
      }
      if (Float1 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Float1);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JointId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JointId);
      }
      if (DockId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DockId);
      }
      if (Float1 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Parameters other) {
      if (other == null) {
        return;
      }
      if (other.JointId != 0) {
        JointId = other.JointId;
      }
      if (other.DockId != 0) {
        DockId = other.DockId;
      }
      if (other.Float1 != 0F) {
        Float1 = other.Float1;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            JointId = input.ReadInt32();
            break;
          }
          case 16: {
            DockId = input.ReadInt32();
            break;
          }
          case 45: {
            Float1 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Command : pb::IMessage<Command> {
    private static readonly pb::MessageParser<Command> _parser = new pb::MessageParser<Command>(() => new Command());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Command> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rofi.CommandinfoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command(Command other) : this() {
      type_ = other.type_;
      params_ = other.params_ != null ? other.params_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command Clone() {
      return new Command(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Rofi.CommandType type_ = global::Rofi.CommandType.NoCommand;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rofi.CommandType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "params" field.</summary>
    public const int ParamsFieldNumber = 2;
    private global::Rofi.Parameters params_;
    /// <summary>
    /// Could be changed to byte[]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rofi.Parameters Params {
      get { return params_; }
      set {
        params_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Command);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Command other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Params, other.Params)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Rofi.CommandType.NoCommand) hash ^= Type.GetHashCode();
      if (params_ != null) hash ^= Params.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Rofi.CommandType.NoCommand) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (params_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Params);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Rofi.CommandType.NoCommand) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (params_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Params);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Command other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Rofi.CommandType.NoCommand) {
        Type = other.Type;
      }
      if (other.params_ != null) {
        if (params_ == null) {
          Params = new global::Rofi.Parameters();
        }
        Params.MergeFrom(other.Params);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Rofi.CommandType) input.ReadEnum();
            break;
          }
          case 18: {
            if (params_ == null) {
              Params = new global::Rofi.Parameters();
            }
            input.ReadMessage(Params);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
